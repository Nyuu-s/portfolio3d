/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState, useMemo, useEffect, useLayoutEffect } from 'react'
import { useGLTF, useAnimations, useVideoTexture, useHelper, PerspectiveCamera, PivotControls, Bounds, Select, Box, OrbitControls, QuadraticBezierLine, Cloud, Sky } from '@react-three/drei'
import RoomFile from '../../assets/models/portfolio-room-arcade-v2.glb'
import { useTheme } from '../../Context/ContextZustand'
import gsap, { interpolate } from 'gsap'
import { ScrollTrigger } from 'gsap/ScrollTrigger'
import { useFrame, useThree,  } from '@react-three/fiber' 
import * as THREE from 'three'
import useStore from '../../Context/ContextZustand'
import { RoughEase } from 'gsap/EasePack'
import { useNavigate } from 'react-router-dom'

// TEXTURES
import ScreenTexture from "../../assets/textures/screen_video.mp4"
import ArcadeScreenTexture from "../../assets/textures/arcade_video.mp4"
import TextureNoise1 from "../../assets/textures/screen_noise1.mp4"
import TextureNoise2 from "../../assets/textures/screen_noise2.mp4"
import { ArrowHelper, AxesHelper, Box3, Box3Helper, BoxGeometry, BoxHelper, CameraHelper, GridHelper, PlaneHelper, PointLightHelper, SpotLightHelper, Vector3 } from 'three'
import CameraLine from '../CameraLine'
import {useLocation} from 'wouter'




export function RoomModel(props) {
  // VARIABLES & CONSTANTS 

  const group = useRef()
  const scene = useRef()
  const Rocket = useRef()
  const RocketCam = useRef()
  const miniLamp = useRef()
  const [rocketClick, setrocketClick] = useState(false)
  const { nodes, materials, animations } = useGLTF(RoomFile)
  const { actions } = useAnimations(animations, group)
  const PCvideo = useVideoTexture(ScreenTexture)
  const Arcadevideo = useVideoTexture(ArcadeScreenTexture)
  const PCNoise = useVideoTexture(TextureNoise1)
  const ArcadeNoise = useVideoTexture(TextureNoise2)
  const PCScreen = useRef()
  const ArcadeScreen = useRef()
  const Tesseract = useRef()
  const TesseractLight = useRef()
  const bigGear = useRef()
  const cam = useRef()
  const lamp = useRef()

  const [GearsRotation, setGearsRotation] = useState({status: false, direction: false})
  const [RoomState, setRoomState] = useState('default')
  const [ScreensState, setScreensState] = useState({pc: PCvideo, arcade: Arcadevideo})
  const [location, setLocation] = useLocation();
  let Theme = useTheme()
  const ambiantRef = useStore(state => state.AmbiantLight)
  const dirLightRef = useStore(state => state.DirLight)
 
  let Rotlerp = useMemo(() => ({
    current : 0,
    target: 0,
    ease: 0.01,
    status: true
  }), [])
  let lerp = useMemo(() => ({
    currentX : 0,
    targetX: 0,
    currentY : 0,
    targetY: 0,
    ease: 0.1 
  }), [])
  
 

// THEME LIGHTS ANIMATION
  useEffect(() => {
    let ctx = gsap.context(() => { 
    if(Theme.mode === 'light'){
      gsap.to(miniLamp.current.color, {r: 0, g:0, b:0})
      gsap.to(lamp.current.material.emissive, {r: 0, g:0, b:0})
      gsap.to(Tesseract.current.material.emissive, {r: 0, g:0, b:0})
    }
    else
    {
      gsap.to(Tesseract.current.material.emissive, {r: 1, g:0, b:0, duration: 10})
      gsap.to(lamp.current.material.emissive, {r: 1, g:0.5, b:0, delay: 2})
      gsap.to(miniLamp.current.color, {r: 1, g:0.5, b:0.4, delay: 2}) 
    }
  })
  return () => {
    ctx.revert()
  }
  }, [Theme])

  // const cam = useStore((state) => (state.mainCamera))
  const mainCam = useThree((state) => state.camera)
  cam.current = mainCam
  
  // RESPONSIVE ROOM ANIMATIONS
  useEffect(() => {
    
    let ctx = gsap.context(() => {  
      
      switch (RoomState) {
        case 'tesseract':
          
          const tl = gsap.timeline({onComplete: () => {setRoomState('default')}})
          tl.pause()
     
          if((ambiantRef && ambiantRef.current)){
            if(tl.isActive){
              tl.kill()
            }
              tl.to(ambiantRef.current, {intensity: 0.04}) 
      
              tl.to(dirLightRef.current.color, {r: 21/255, g:21/255, b:50/255}, '<')
              tl.to(miniLamp.current.color, {r: 1, g:0.5, b:0.4, onComplete: () => {setScreensState({pc:PCNoise, arcade:ArcadeNoise})}}, '<') 
              tl.to(miniLamp.current, 2, { power: 0, ease:RoughEase.ease.config({  strength: 1, points: 30, randomize: true, clamp: false}),  repeat:21 , yoyo: true });
              // tl.to(ambiantRef.current.color, {r:1, g:0, b:0, repeat:11, yoyo: true}, '<')
              
              tl.to(Tesseract.current.scale, {x: 2, y: 2, z: 2, duration:0.5, repeat:51, yoyo: true}, "<")
              tl.play()
            }

        break;
        case 'minilamp':
            lamp.current.power = 1
            gsap.to(lamp.current.material.emissive, {r: 0, g:0, b:0})
            gsap.to(miniLamp.current.color, {r: 0, g:0, b:0 }) 
        break;
        case 'rocket':
          const timeline = gsap.timeline({onComplete: () => {
            // props.setState({status: true, url: '/projects'})
            setLocation('/projects')
          }
        })
          let v2 = new THREE.Vector3()
          let q1 = new THREE.Quaternion()
          timeline.pause()
          if((group && group.current) && RocketCam.current){
            let rocketcam = RocketCam.current.getWorldPosition(v2)
            let rocketrot = RocketCam.current.getWorldQuaternion(q1)
            let scale = 0.00065
            // timeline.to(group.current.scale, {x: 0.5, y:0.5, z:0.5, duration: 3})
            // timeline.to(group.current.rotation, {y:-0.6, duration: 3}, '<')
            // timeline.to(group.current.position, {x: 6, z:17, duration: 3}, '<')
            // // timeline.to(cam.current.position, {x: rocketcam.x, y: rocketcam.x.y, z:rocketcam.z, duration: 3}, '<')
            timeline.to(cam.current.position, {x: rocketcam.x, y: rocketcam.y, z:rocketcam.z, duration: 3}, '<')
            timeline.to(cam.current.quaternion, {_x: rocketrot.x, _y: rocketrot.y, _z: rocketrot.z, _w: rocketrot.w, duration: 3}, '<')
            timeline.to(cam.current.scale, {x: scale, y: scale, z: scale, duration: 3, onComplete: () => {setrocketClick(true)}}, '<')
            timeline.to(cam.current.position, {y: 10,  duration: 7})
            timeline.to(Rocket.current.position, { y: 50, duration: 7, onComplete: () => {setrocketClick(false)}}, '<')
            timeline.to(Rocket.current.position, { y: '+=50', duration: 1})
            
          
            // timeline.to(group.current.scale, {x: .5, y:.5, z:.5, duration: 3}, '<')
           

          }
          timeline.play()
        break;
      
    
      default:
        setScreensState({pc:PCvideo, arcade:Arcadevideo})
        break;
    }
  })
    
    return () => {
      ctx.revert()
    }
     
  }, [RoomState, ArcadeNoise, Arcadevideo, PCNoise, PCvideo, ambiantRef, dirLightRef])
  
  const getScene = () => {
    return scene
  }

  useEffect(() => {
    const onMove = (e) =>{
      var rotationX = ((e.clientX - window.innerWidth / 2) * 2) / window.innerWidth
      var rotationY = ((e.clientY - window.innerHeight / 2) * 2) / window.innerHeight
      lerp.targetX = rotationX * 0.05
      lerp.targetY = rotationY * 0.05
    }
    window.addEventListener('mousemove', onMove)
    const el = props.containerRef.current
    
    // tl.to(scene.current.position, {x: 5, duration:10})
    let ctx = gsap.context(() => { 

      scene.current.position.set(-0.45, 0, 0)
      let mm = gsap.matchMedia()
      mm.add("(min-width: 640px)", ()=> {
        scene.current.scale.set(1, 1, 1) 
        const tl = gsap.timeline()
        tl.to(scene.current.position, {x: () =>{ return window.innerWidth * 0.0055}, ease: 1,
            scrollTrigger: {
                trigger: el.querySelector('.separator'),
                scrub: 0.5,
                id: 'bigScaleTrigger',
                start: "top top",
                end: "bottom bottom",
                scroller: el.querySelector('.page'), 
                
            }
        })
      })

      mm.add("(max-width: 640px)", ()=> {
        console.log(getScene());
        scene.current.scale.set(0.6, 0.6, 0.6)

        miniLamp.current.distance = 100
        const tl = gsap.timeline()
        tl.to(scene.current.scale, {x: 0.4, y: 0.4, z: 0.4, ease: 1,
            scrollTrigger: {
                trigger: el.querySelector('.separator'),
                scrub: 0.5,
                start: "top top",
                id: 'smallScaleTrigger',
                end: "bottom bottom",
                scroller: el.querySelector('.page'),
                
            }
        })
      })



    // tl.to(bigGear.current, {rotateY: 0.01, repeat: -1})
      ScrollTrigger.create( {
        id: 'roomScrollTrigger',
        trigger: el.querySelector('.separator'),
        start: "top top",
        scrub: 0.5,
        end: "bottom top",
        scroller: el.querySelector('.page'),
       
        onEnter: () => setGearsRotation({status: true, direction: false}),
        onLeave:() => setGearsRotation({status: false, direction: false}),
        onEnterBack: () => setGearsRotation({status: true, direction: true}),
        onLeaveBack: () => setGearsRotation({status: false, direction: true}),
        onUpdate: (self) => {
            Rotlerp.status =true
            Rotlerp.target = self.progress
            
        }
      })
    })
       
    return () => {
      window.removeEventListener("mousemove", onMove)
      ScrollTrigger.getAll().forEach((instance) => {
        instance.kill();
      });
     
      ctx.revert()
    }
  
 

  }, [ props.containerRef, Rotlerp, lerp ])

  //BLENDER ANIMATION & VIDEO TEXTURE 
  useEffect(() => {
    PCScreen.current.material = new THREE.MeshBasicMaterial({map: ScreensState.pc})
    ArcadeScreen.current.material = new THREE.MeshBasicMaterial({map: ScreensState.arcade})
    actions['Cube.099Action.001']?.play()
  }, [ScreensState,PCvideo, Arcadevideo, actions])
  

let v1 = new THREE.Vector3()

const cameraOrigin = useThree((state) => state.camera.position)
// THREE JS FRAME UPDATE FUNCTION 
useFrame((state) => {
    RocketCam.current.lookAt(Rocket.current.getWorldPosition(v1))
    
    if(!rocketClick){
      scene.current.rotation.y = lerp.currentX
      lerp.currentX = gsap.utils.interpolate(lerp.currentX, lerp.targetX, lerp.ease)
      scene.current.rotation.x = lerp.currentY
      lerp.currentY = gsap.utils.interpolate(lerp.currentY, lerp.targetY, lerp.ease)
    }
    else{  
      cam.current.lookAt(Rocket.current.getWorldPosition(v1))
  }
  
  
  if(GearsRotation.status){
    bigGear.current.rotateY(GearsRotation.direction ? -0.01 : 0.01) 
  }
  if(RoomState === 'tesseract'){
    const t = state.clock.getElapsedTime() 
    Tesseract.current.rotation.y = 10 * t
  }
  return null
}) 


//  useHelper(RocketCam, CameraHelper)
  return (
    <group ref={group} {...props}  scale={0.21} position={[0,-1,0]} >
     
      <group ref={scene} name="Scene"  >
      
        <group name="RoomWalls" position={[0.57, 5, 1.98]} rotation={[0, Math.PI / 4, 0]}>
          <mesh name="Cube008_1" castShadow receiveShadow geometry={nodes.Cube008_1.geometry} material={materials.Base} />
          <mesh name="Cube008_2" castShadow receiveShadow geometry={nodes.Cube008_2.geometry} material={materials.Wall} />
          <mesh name="Cube008_3" castShadow receiveShadow geometry={nodes.Cube008_3.geometry} material={materials.floor2} />
        </group>
        <group name="MiniLampe"  position={[-2.44, 5.3, -1.13]} rotation={[0, Math.PI / 4, 0]}

        >
          <mesh name="Cylinder002_1" 
            onClick={() => {
              if(RoomState !== 'tesseract'){
                RoomState === 'minilamp' ? setRoomState('default') : setRoomState('minilamp')
              }
          }}
            onPointerOver={() => {document.body.style.cursor = 'pointer'}}
            onPointerLeave={() => {document.body.style.cursor = 'default'}}
          ref={lamp} material-color="blue" castShadow receiveShadow geometry={nodes.Cylinder002_1.geometry} material={materials.Material}/>
          <pointLight ref={miniLamp} scale={0.21} position={[0,0.4,0]} intensity={1} distance={200} color={"#000"} />
          <mesh name="Cylinder002_2" castShadow receiveShadow geometry={nodes.Cylinder002_2.geometry} material={materials.lampBase} />
        </group>
        <mesh name="Plane" castShadow receiveShadow geometry={nodes.Plane.geometry} material={materials.WindowFrame} position={[-0.73, 5.56, -3.31]} rotation={[-Math.PI / 2, 0, Math.PI / 4]} />

          <group name="Rocket"  position={[0.01, 0.35, -1.33]} rotation={[-1.39, 0.86, 2.9]} >
                <mesh  name="Cone" castShadow receiveShadow geometry={nodes.Cone.geometry} material={materials['Rocket.001']}/>
                <mesh  name="Cone_1" castShadow receiveShadow geometry={nodes.Cone_1.geometry} material={materials.RocketTop} />
          </group>
          <group name="WallPainting2" position={[2.35, 6.53, -3.01]} rotation={[Math.PI / 2, 0, Math.PI / 4]} scale={0.06}>
          <mesh name="Box029004" castShadow receiveShadow geometry={nodes.Box029004.geometry} material={materials['Material #1029.004']} />
          <mesh name="Box029004_1" castShadow receiveShadow geometry={nodes.Box029004_1.geometry} material={materials['Material #227.004']} />
        </group>
        <group>

        <mesh name="Rocketv2" ref={Rocket} castShadow receiveShadow geometry={nodes.Rocketv2.geometry} material={materials.Mat} position={[-4.26, 3.71, 0.68]} rotation={[Math.PI / 2, 0, -Math.PI / 4]} scale={0.005} 
          onClick={(e) => {
            RoomState === 'rocket' ? setRoomState('default') : setRoomState('rocket')
            if(rocketClick)
              setrocketClick(false)
          }}
          onPointerOver={(e) => { 
            e.eventObject.material.emissive = {r: 1, g:0, b:0}
            document.body.style.cursor = 'pointer';

          
          } }
          onPointerOut={(e) => { 
            e.eventObject.material.emissive = {r: 0, g:0, b:0}
            document.body.style.cursor = 'default';
          }}
        > 

        </mesh>
        <PerspectiveCamera  
              // makeDefault={rocketClick}
              ref={RocketCam} 
              position={[-1.5,5,4]}
      
              far={10000}
              near={1}
              rotation={[0,0,0]}
              aspect={window.innerWidth / window.innerHeight}
              fov={45}
            
          
              
              />
        </group>
        <mesh name="WallPainting1" castShadow receiveShadow geometry={nodes.WallPainting1.geometry} material={materials.MTRL_Wall_PaintingAbstarct2} position={[-4.96, 6.6, 0.68]} rotation={[1.55, 0, -0.79]} scale={[1.01, 1.01, 1.46]} />
        <mesh name="Cube" castShadow receiveShadow geometry={nodes.Cube.geometry} material={materials['tableTop.001']} position={[-2.73, 1.52, 0.3]} rotation={[0, Math.PI / 4, 0]} />
        <mesh name="Cube001" castShadow receiveShadow geometry={nodes.Cube001.geometry} material={materials['TableLeg.001']} position={[-3.91, 0.29, 1.48]} rotation={[0, Math.PI / 4, 0]} />
        <group name="Cube002" position={[-3.91, 0.41, 1.48]} rotation={[0, Math.PI / 4, 0]}>
          <mesh name="Cube007_1" castShadow receiveShadow geometry={nodes.Cube007_1.geometry} material={materials['TableLeg.001']} />
          <mesh name="Cube007_2" castShadow receiveShadow geometry={nodes.Cube007_2.geometry} material={materials['TableLegBlack.001']} />
        </group>
        <mesh name="Cube004" castShadow receiveShadow geometry={nodes.Cube004.geometry} material={materials['tableTop.001']} position={[-3.18, 1.85, -0.19]} rotation={[0, Math.PI / 4, 0]} />
        <mesh name="Circle" castShadow receiveShadow geometry={nodes.Circle.geometry} material={materials['leaf.001']} position={[-1.64, 1.83, -1.25]} rotation={[Math.PI, -0.28, Math.PI]} />
        <mesh name="Circle001" castShadow receiveShadow geometry={nodes.Circle001.geometry} material={materials['leaf.001']} position={[-1.64, 1.83, -1.25]} rotation={[Math.PI, -1.2, Math.PI]} />
        <mesh name="Circle002" castShadow receiveShadow geometry={nodes.Circle002.geometry} material={materials['leaf.001']} position={[-1.64, 1.83, -1.25]} rotation={[0, -0.51, 0]} />
        <mesh name="Circle003" castShadow receiveShadow geometry={nodes.Circle003.geometry} material={materials['leaf.001']} position={[-1.64, 1.83, -1.25]} rotation={[-Math.PI, 0.89, -Math.PI]} />
        <mesh name="Circle004" castShadow receiveShadow geometry={nodes.Circle004.geometry} material={materials['leaf.001']} position={[-1.64, 1.83, -1.25]} rotation={[0, 1.17, 0]} />
        <mesh name="Circle005" castShadow receiveShadow geometry={nodes.Circle005.geometry} material={materials['leaf.001']} position={[-1.64, 1.83, -1.25]} rotation={[0, 0.46, 0]} />
        <mesh name="Circle006" castShadow receiveShadow geometry={nodes.Circle006.geometry} material={materials['leaf.001']} position={[-1.64, 1.83, -1.25]} rotation={[0, 0.45, 0]} />
        <mesh name="Circle007" castShadow receiveShadow geometry={nodes.Circle007.geometry} material={materials['leaf.001']} position={[-1.64, 1.83, -1.25]} rotation={[0, -0.13, 0]} />
        <mesh name="Circle008" castShadow receiveShadow geometry={nodes.Circle008.geometry} material={materials['leaf.001']} position={[-1.64, 1.83, -1.25]} rotation={[-Math.PI, 1.03, -Math.PI]} />
        <mesh name="Circle009" castShadow receiveShadow geometry={nodes.Circle009.geometry} material={materials['leaf.001']} position={[-1.64, 1.83, -1.25]} rotation={[0, -1.34, 0]} />
        <mesh name="Circle010" castShadow receiveShadow geometry={nodes.Circle010.geometry} material={materials['leaf.001']} position={[-1.64, 1.83, -1.25]} rotation={[-Math.PI, 0.16, -Math.PI]} />
        <group name="Cylinder" position={[-1.61, 1.74, -1.25]} rotation={[0, Math.PI / 4, 0]}>
          <mesh name="Cylinder_1" castShadow receiveShadow geometry={nodes.Cylinder_1.geometry} material={materials['pot.001']} />
          <mesh name="Cylinder_2" castShadow receiveShadow geometry={nodes.Cylinder_2.geometry} material={materials['soil.001']} />
        </group>
        <mesh name="screen" castShadow receiveShadow geometry={nodes.screen.geometry} material={materials['ScreenPC.001']} position={[-3.18, 2.53, -0.19]} rotation={[0, Math.PI / 4, 0]} />
        <mesh name="screen001" ref={PCScreen} castShadow receiveShadow geometry={nodes.screen001.geometry} material={materials['Screen.001']} position={[-3.18, 2.53, -0.19]} rotation={[0, Math.PI / 4, 0]} />
        <mesh name="Cube007" castShadow receiveShadow geometry={nodes.Cube007.geometry} material={materials.Key} position={[-3.29, 1.65, 0.61]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube008" castShadow receiveShadow geometry={nodes.Cube008.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube009" castShadow receiveShadow geometry={nodes.Cube009.geometry} material={materials.Key} position={[-3.16, 1.65, 0.7]} rotation={[0.1, 0.78, -0.05]} />
        <mesh name="Cube010" castShadow receiveShadow geometry={nodes.Cube010.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube011" castShadow receiveShadow geometry={nodes.Cube011.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube012" castShadow receiveShadow geometry={nodes.Cube012.geometry} material={materials.Key} position={[-3.33, 1.65, 0.66]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube013" castShadow receiveShadow geometry={nodes.Cube013.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube014" castShadow receiveShadow geometry={nodes.Cube014.geometry} material={materials.Key} position={[-3.23, 1.65, 0.59]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube015" castShadow receiveShadow geometry={nodes.Cube015.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube016" castShadow receiveShadow geometry={nodes.Cube016.geometry} material={materials.Key} position={[-2.54, 1.65, 0.25]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube017" castShadow receiveShadow geometry={nodes.Cube017.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube018" castShadow receiveShadow geometry={nodes.Cube018.geometry} material={materials.Key} position={[-2.81, 1.64, 0.62]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube019" castShadow receiveShadow geometry={nodes.Cube019.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube020" castShadow receiveShadow geometry={nodes.Cube020.geometry} material={materials.Key} position={[-3.23, 1.65, 0.59]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube021" castShadow receiveShadow geometry={nodes.Cube021.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube022" castShadow receiveShadow geometry={nodes.Cube022.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube023" castShadow receiveShadow geometry={nodes.Cube023.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube024" castShadow receiveShadow geometry={nodes.Cube024.geometry} material={materials.Key} position={[-3.29, 1.65, 0.61]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube025" castShadow receiveShadow geometry={nodes.Cube025.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube026" castShadow receiveShadow geometry={nodes.Cube026.geometry} material={materials.Key} position={[-3.23, 1.65, 0.6]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube027" castShadow receiveShadow geometry={nodes.Cube027.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube028" castShadow receiveShadow geometry={nodes.Cube028.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube029" castShadow receiveShadow geometry={nodes.Cube029.geometry} material={materials.Key} position={[-3.31, 1.65, 0.68]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube030" castShadow receiveShadow geometry={nodes.Cube030.geometry} material={materials.Key} position={[-3.29, 1.65, 0.61]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube031" castShadow receiveShadow geometry={nodes.Cube031.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube032" castShadow receiveShadow geometry={nodes.Cube032.geometry} material={materials.Key} position={[-3.23, 1.65, 0.6]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube033" castShadow receiveShadow geometry={nodes.Cube033.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube034" castShadow receiveShadow geometry={nodes.Cube034.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube035" castShadow receiveShadow geometry={nodes.Cube035.geometry} material={materials.Key} position={[-3.07, 1.64, 0.78]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube036" castShadow receiveShadow geometry={nodes.Cube036.geometry} material={materials.Key} position={[-3.29, 1.65, 0.61]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube037" castShadow receiveShadow geometry={nodes.Cube037.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube038" castShadow receiveShadow geometry={nodes.Cube038.geometry} material={materials.Key} position={[-3.23, 1.65, 0.6]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube039" castShadow receiveShadow geometry={nodes.Cube039.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube040" castShadow receiveShadow geometry={nodes.Cube040.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube041" castShadow receiveShadow geometry={nodes.Cube041.geometry} material={materials.Key} position={[-2.61, 1.66, 0.15]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube042" castShadow receiveShadow geometry={nodes.Cube042.geometry} material={materials.Key} position={[-3.29, 1.65, 0.61]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube043" castShadow receiveShadow geometry={nodes.Cube043.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube044" castShadow receiveShadow geometry={nodes.Cube044.geometry} material={materials.Key} position={[-3.23, 1.65, 0.6]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube045" castShadow receiveShadow geometry={nodes.Cube045.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube046" castShadow receiveShadow geometry={nodes.Cube046.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube047" castShadow receiveShadow geometry={nodes.Cube047.geometry} material={materials.Key} position={[-3.22, 1.65, 0.59]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube048" castShadow receiveShadow geometry={nodes.Cube048.geometry} material={materials.Key} position={[-3.29, 1.65, 0.61]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube049" castShadow receiveShadow geometry={nodes.Cube049.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube050" castShadow receiveShadow geometry={nodes.Cube050.geometry} material={materials.Key} position={[-3.23, 1.65, 0.6]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube051" castShadow receiveShadow geometry={nodes.Cube051.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube052" castShadow receiveShadow geometry={nodes.Cube052.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube054" castShadow receiveShadow geometry={nodes.Cube054.geometry} material={materials.Key} position={[-3.29, 1.65, 0.61]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube055" castShadow receiveShadow geometry={nodes.Cube055.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube056" castShadow receiveShadow geometry={nodes.Cube056.geometry} material={materials.Key} position={[-3.23, 1.65, 0.6]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube057" castShadow receiveShadow geometry={nodes.Cube057.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube058" castShadow receiveShadow geometry={nodes.Cube058.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube060" castShadow receiveShadow geometry={nodes.Cube060.geometry} material={materials.Key} position={[-3.29, 1.65, 0.61]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube061" castShadow receiveShadow geometry={nodes.Cube061.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube062" castShadow receiveShadow geometry={nodes.Cube062.geometry} material={materials.Key} position={[-3.24, 1.65, 0.6]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube063" castShadow receiveShadow geometry={nodes.Cube063.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube064" castShadow receiveShadow geometry={nodes.Cube064.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube066" castShadow receiveShadow geometry={nodes.Cube066.geometry} material={materials.Key} position={[-3.29, 1.65, 0.61]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube067" castShadow receiveShadow geometry={nodes.Cube067.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube068" castShadow receiveShadow geometry={nodes.Cube068.geometry} material={materials.Key} position={[-3.24, 1.65, 0.6]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube069" castShadow receiveShadow geometry={nodes.Cube069.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube070" castShadow receiveShadow geometry={nodes.Cube070.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube071" castShadow receiveShadow geometry={nodes.Cube071.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube072" castShadow receiveShadow geometry={nodes.Cube072.geometry} material={materials.Key} position={[-3.29, 1.65, 0.61]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube073" castShadow receiveShadow geometry={nodes.Cube073.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube074" castShadow receiveShadow geometry={nodes.Cube074.geometry} material={materials.Key} position={[-3.24, 1.65, 0.6]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube075" castShadow receiveShadow geometry={nodes.Cube075.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube077" castShadow receiveShadow geometry={nodes.Cube077.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube078" castShadow receiveShadow geometry={nodes.Cube078.geometry} material={materials.Key} position={[-3.29, 1.65, 0.61]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube079" castShadow receiveShadow geometry={nodes.Cube079.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube081" castShadow receiveShadow geometry={nodes.Cube081.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube083" castShadow receiveShadow geometry={nodes.Cube083.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube084" castShadow receiveShadow geometry={nodes.Cube084.geometry} material={materials.Key} position={[-3.29, 1.65, 0.61]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube085" castShadow receiveShadow geometry={nodes.Cube085.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube089" castShadow receiveShadow geometry={nodes.Cube089.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube090" castShadow receiveShadow geometry={nodes.Cube090.geometry} material={materials.Key} position={[-3.29, 1.65, 0.61]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube091" castShadow receiveShadow geometry={nodes.Cube091.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube092" castShadow receiveShadow geometry={nodes.Cube092.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube095" castShadow receiveShadow geometry={nodes.Cube095.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube096" castShadow receiveShadow geometry={nodes.Cube096.geometry} material={materials.Key} position={[-3.29, 1.65, 0.61]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube097" castShadow receiveShadow geometry={nodes.Cube097.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube098" castShadow receiveShadow geometry={nodes.Cube098.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube100" castShadow receiveShadow geometry={nodes.Cube100.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube101" castShadow receiveShadow geometry={nodes.Cube101.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube102" castShadow receiveShadow geometry={nodes.Cube102.geometry} material={materials.Key} position={[-3.29, 1.65, 0.61]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube103" castShadow receiveShadow geometry={nodes.Cube103.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube104" castShadow receiveShadow geometry={nodes.Cube104.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube107" castShadow receiveShadow geometry={nodes.Cube107.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube109" castShadow receiveShadow geometry={nodes.Cube109.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube110" castShadow receiveShadow geometry={nodes.Cube110.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube111" castShadow receiveShadow geometry={nodes.Cube111.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube112" castShadow receiveShadow geometry={nodes.Cube112.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube113" castShadow receiveShadow geometry={nodes.Cube113.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube115" castShadow receiveShadow geometry={nodes.Cube115.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube116" castShadow receiveShadow geometry={nodes.Cube116.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube117" castShadow receiveShadow geometry={nodes.Cube117.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube118" castShadow receiveShadow geometry={nodes.Cube118.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube119" castShadow receiveShadow geometry={nodes.Cube119.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube121" castShadow receiveShadow geometry={nodes.Cube121.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube122" castShadow receiveShadow geometry={nodes.Cube122.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube123" castShadow receiveShadow geometry={nodes.Cube123.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube124" castShadow receiveShadow geometry={nodes.Cube124.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube125" castShadow receiveShadow geometry={nodes.Cube125.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube127" castShadow receiveShadow geometry={nodes.Cube127.geometry} material={materials.Key} position={[-3.27, 1.65, 0.63]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube130" castShadow receiveShadow geometry={nodes.Cube130.geometry} material={materials.Key} position={[-3.24, 1.65, 0.66]} rotation={[0.1, 0.78, -0.06]} />
        <mesh name="Cube006" castShadow receiveShadow geometry={nodes.Cube006.geometry} material={materials['keyboard.001']} position={[-2.73, 1.63, 0.29]} rotation={[0, Math.PI / 4, 0.01]} />
        <mesh name="Cube005" castShadow receiveShadow geometry={nodes.Cube005.geometry} material={materials['keyboard.001']} position={[-2.73, 1.63, 0.29]} rotation={[0, Math.PI / 4, 0.01]} />
        <mesh name="Cube053" castShadow receiveShadow geometry={nodes.Cube053.geometry} material={materials['tableTop.001']} position={[-3.21, 3.69, -0.38]} rotation={[0, Math.PI / 4, 0]} />
        <mesh name="Cube059" castShadow receiveShadow geometry={nodes.Cube059.geometry} material={materials['tableTop.001']} position={[-2.76, 5.24, -0.83]} rotation={[0, Math.PI / 4, 0]} />
        <mesh name="Cylinder001" castShadow receiveShadow geometry={nodes.Cylinder001.geometry} material={materials['TableLeg.001']} position={[-3.36, 1.72, 1.38]} rotation={[-Math.PI, 1.31, -Math.PI]} />
        <mesh name="MousePad" castShadow receiveShadow geometry={nodes.MousePad.geometry} material={materials.MousePad} position={[-1.75, 1.61, -0.37]} rotation={[0, 0.66, 0]} />
       
         
         
            
            <mesh name="Cube099"
            onPointerOver={() => {
              document.body.style.cursor = 'pointer'
            
            }}
            onPointerLeave={() => {
              document.body.style.cursor = 'default'
            }}
            onClick={(e) => {
              console.log(e);
              RoomState === 'tesseract' ? setRoomState('default') : setRoomState('tesseract') 
              
              
            }}
            ref={Tesseract} castShadow receiveShadow  geometry={nodes.Cube099.geometry} material={materials.spaceCube} position={[-2.14, 4.18, -1.4]} rotation={[-2.71, -0.09, -0.33]} > 
              <pointLight ref={TesseractLight}  position={[0,0,0]} intensity={2} distance={50} color={"#f00"} visible={(RoomState === 'tesseract') || (Theme.mode !== "light")}/>
            </mesh>

        <mesh name="Cylinder002" castShadow receiveShadow geometry={nodes.Cylinder002.geometry} material={materials.Gears} position={[-2.14, 3.78, -1.41]} rotation={[0, Math.PI / 4, 0]} />
        <group name="Cube080" position={[-2.89, 4.07, -0.81]} rotation={[-1.57, 0, 2.36]}>
          <mesh name="Cube156" castShadow receiveShadow geometry={nodes.Cube156.geometry} material={materials.BookGreen} />
          <mesh name="Cube156_1" castShadow receiveShadow geometry={nodes.Cube156_1.geometry} material={materials.BookPage} />
        </group>
        <group name="Cube082" position={[-2.98, 4.07, -0.77]} rotation={[-1.57, 0, 2.36]}>
          <mesh name="Cube157" castShadow receiveShadow geometry={nodes.Cube157.geometry} material={materials.BookRed} />
          <mesh name="Cube157_1" castShadow receiveShadow geometry={nodes.Cube157_1.geometry} material={materials.BookPage} />
        </group>
        <group name="Cube086" position={[-3.02, 4.07, -0.7]} rotation={[-1.57, 0, 2.36]}>
          <mesh name="Cube158" castShadow receiveShadow geometry={nodes.Cube158.geometry} material={materials.BookBlue} />
          <mesh name="Cube158_1" castShadow receiveShadow geometry={nodes.Cube158_1.geometry} material={materials.BookPage} />
        </group>
        <group name="Cube087" position={[-3.12, 4.07, -0.66]} rotation={[-1.57, 0, 2.36]}>
          <mesh name="Cube159" castShadow receiveShadow geometry={nodes.Cube159.geometry} material={materials.BookRed} />
          <mesh name="Cube159_1" castShadow receiveShadow geometry={nodes.Cube159_1.geometry} material={materials.BookPage} />
        </group>
        <group name="Cube088" position={[-2.78, 4.07, -1]} rotation={[-1.25, -0.3, 2.41]}>
          <mesh name="Cube160" castShadow receiveShadow geometry={nodes.Cube160.geometry} material={[materials['Rocket.001']]} />
          <mesh name="Cube160_1" castShadow receiveShadow geometry={nodes.Cube160_1.geometry} material={materials.BookPage} />
        </group>
        <group name="Cube093" position={[-3.19, 3.82, -0.32]} rotation={[0, Math.PI / 4, 0]}>
          <mesh name="Cube161" castShadow receiveShadow geometry={nodes.Cube161.geometry} material={materials.BookBlue} />
          <mesh name="Cube161_1" castShadow receiveShadow geometry={nodes.Cube161_1.geometry} material={materials.BookPage} />
        </group>
        <group name="Cube094" position={[-3.57, 3.85, 0]} rotation={[-3, 0.61, 2.99]}>
          <mesh name="Cube162" castShadow receiveShadow geometry={nodes.Cube162.geometry} material={materials.BookGreen} />
          <mesh name="Cube162_1" castShadow receiveShadow geometry={nodes.Cube162_1.geometry} material={materials.BookPage} />
        </group>
        <group name="Cube065" position={[-2.91, 5.4, -0.53]} rotation={[-0.12, -0.28, -0.1]}>
          <mesh name="Cube154" castShadow receiveShadow geometry={nodes.Cube154.geometry} material={materials.BookGreen} />
          <mesh name="Cube154_1" castShadow receiveShadow geometry={nodes.Cube154_1.geometry} material={materials.BookPage} />
        </group>
        <group name="Cube076" position={[-3.16, 5.33, -0.25]} rotation={[0, Math.PI / 4, 0]}>
          <mesh name="Cube155" castShadow receiveShadow geometry={nodes.Cube155.geometry} material={materials.BookBlue} />
          <mesh name="Cube155_1" castShadow receiveShadow geometry={nodes.Cube155_1.geometry} material={materials.BookPage} />
        </group>
        <group name="Cube105" position={[1.87, 1.87, -1.83]} rotation={[0, Math.PI / 4, 0]} scale={[1, 0.69, 1]}>
          <mesh name="Cube_1" castShadow receiveShadow geometry={nodes.Cube_1.geometry} material={materials.AracadeBody} />
          <mesh name="Cube_2" castShadow receiveShadow geometry={nodes.Cube_2.geometry} material={materials['Rocket.001']} />
          <mesh name="Cube_3" castShadow receiveShadow geometry={nodes.Cube_3.geometry} material={materials.AracadeButton} />
        </group>
        <mesh name="arcadeScreen001"  ref={ArcadeScreen} castShadow receiveShadow geometry={nodes.arcadeScreen001.geometry} material={materials['Screen.001']} position={[1.87, 1.87, -1.83]} rotation={[0, Math.PI / 4, 0]} scale={[1, 0.69, 1]} />
        <mesh name="Cylinder007" ref={bigGear} castShadow receiveShadow geometry={nodes.Cylinder007.geometry} material={materials['Material.001']} position={[5.05, 0.28, 2.46]} rotation={[-Math.PI, Math.PI / 4, Math.PI / 2]} />
        <mesh name="INSTANCE_0_001" castShadow receiveShadow geometry={nodes.INSTANCE_0_001.geometry} material={materials.chairlegs} position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.12} />
        <mesh name="INSTANCE_1_001" castShadow receiveShadow geometry={nodes.INSTANCE_1_001.geometry} material={materials.chairlegs} position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.29} />
        <mesh name="INSTANCE_3_001" castShadow receiveShadow geometry={nodes.INSTANCE_3_001.geometry} material={materials.chairseat} position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.16} />
        <mesh name="INSTANCE_4_001" castShadow receiveShadow geometry={nodes.INSTANCE_4_001.geometry} material={materials.chairseat} position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.19} />
        <mesh name="INSTANCE_5_001" castShadow receiveShadow geometry={nodes.INSTANCE_5_001.geometry} material={materials.chairseat} position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.19} />
        <mesh name="INSTANCE_6_001" castShadow receiveShadow geometry={nodes.INSTANCE_6_001.geometry} material={materials.chairseat} position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.16} />
        <mesh name="INSTANCE_7_001" castShadow receiveShadow geometry={nodes.INSTANCE_7_001.geometry} material={materials.chairseat} position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.13} />
        <mesh name="INSTANCE_8_001" castShadow receiveShadow geometry={nodes.INSTANCE_8_001.geometry} material={nodes.INSTANCE_8_001.material} position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.11} />
        <mesh name="INSTANCE_9_001" castShadow receiveShadow geometry={nodes.INSTANCE_9_001.geometry} material={materials.chairlegs} position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.1} />
        <mesh name="INSTANCE_10_001" castShadow receiveShadow geometry={nodes.INSTANCE_10_001.geometry} material={materials.chairlegs} position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.1} />
        <mesh name="INSTANCE_11_001" castShadow receiveShadow geometry={nodes.INSTANCE_11_001.geometry} material={materials.chairback} position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.08} />
        <mesh name="INSTANCE_12_001" castShadow receiveShadow geometry={nodes.INSTANCE_12_001.geometry} material={materials.chairlegs} position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.08} />
        <mesh name="INSTANCE_13_001" castShadow receiveShadow geometry={nodes.INSTANCE_13_001.geometry} material={materials.chairlegs} position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.1} />
        <mesh name="INSTANCE_14_001" castShadow receiveShadow geometry={nodes.INSTANCE_14_001.geometry} material={materials.chairback} position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.08} />
        <mesh name="INSTANCE_15_001" castShadow receiveShadow geometry={nodes.INSTANCE_15_001.geometry} material={materials.chairlegs} position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.08} />
        <mesh name="INSTANCE_16_001" castShadow receiveShadow geometry={nodes.INSTANCE_16_001.geometry} material={materials.chairlegs} position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.1} />
        <group name="INSTANCE_17_001" position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.38}>
          <mesh name="Mesh005" castShadow receiveShadow geometry={nodes.Mesh005.geometry} material={materials.chairseat} />
          <mesh name="Mesh005_1" castShadow receiveShadow geometry={nodes.Mesh005_1.geometry} material={materials.dbl_INSTANCE_17_002} />
        </group>
        <mesh name="INSTANCE_18_001" castShadow receiveShadow geometry={nodes.INSTANCE_18_001.geometry} material={materials.chairback} position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.38} />
        <mesh name="INSTANCE_19_001" castShadow receiveShadow geometry={nodes.INSTANCE_19_001.geometry} material={materials.chairlegs} position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.46} />
        <mesh name="INSTANCE_20_001" castShadow receiveShadow geometry={nodes.INSTANCE_20_001.geometry} material={materials.chairlegs} position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.08} />
        <mesh name="INSTANCE_21_001" castShadow receiveShadow geometry={nodes.INSTANCE_21_001.geometry} material={materials.chairseat} position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.23} />
        <mesh name="INSTANCE_22_001" castShadow receiveShadow geometry={nodes.INSTANCE_22_001.geometry} material={materials.chairseat} position={[-0.97, 0.23, 1.06]} rotation={[Math.PI, -0.77, Math.PI]} scale={0.19} />
            
      </group>
    </group>
  )
} 

useGLTF.preload('/portfolio-room-arcade-v2.glb')

export default RoomModel